<!--Use the namespace "http://schemas.android.com/apk/res-auto" to set the custom-->
<!--attribute, drawerOverhang.  This determines how much of the main content view-->
<!--is shown when it slides out to display the navigation view underneath.-->
<com.matthewlogan.reversedrawerlayout.library.ReverseDrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/reverse_drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    app:drawerOverhang="30dp">

    <!--The first child of ReverseDrawerLayout is the navigation (or other) content,-->
    <!--which will initially be hidden.  As the second child of ReverseDrawerLayout-->
    <!--(the main content view) slides out, this view will be revealed underneath it.-->
    <RelativeLayout
        android:id="@+id/bottom_content"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="#999">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_centerInParent="true"
            android:text="This is the drawer content"
            android:textColor="#fff"
            android:textSize="30sp" />

    </RelativeLayout>

    <!--The second child of ReverseDrawerLayout is the main content view.  This can be a-->
    <!--container for a fragment or any other type of view.  This will slide in and out-->
    <!--to reveal the navigation (or other) content underneath.-->
    <FrameLayout
        android:id="@+id/fragment_container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_gravity="right" />

</com.matthewlogan.reversedrawerlayout.library.ReverseDrawerLayout>